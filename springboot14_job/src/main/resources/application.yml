server:
  #端口
  port: 8081
  #  servlet:
  #上下文路径
#    context-path: /qz

# 自定义上传文件的文件夹位置
upload:
  location: D:/user/learn_xuexi/img

# 自定义shiro属性
#shiro:
#  chain: #配置路径以及，路径需要的权限，和角色为Map
#    '[/shiro]': authc,roles[admin]
#    '[/admin/*]': authc,roles[admin]
#    '[/ex]': anon
#    '[/]': anon
#    '[/login]': anon
#    '[/logout]': logout
#    '[/**]': anon
#  login-url: / #登录的路径（当没登录时跳转的路径）
#  unauthorized-url: /403 #权限不足的路径
#  success-url: /success #登录成功的路径
#  hash-algorithm-name: MD5 #加密的方式名称
#  hash-iterations: 2 #加密的迭代次数




spring:
    # 配置JDBC
    # 配置静态路径（默认为public/static路径）
  mvc:
    # 告诉springboot什么请求路径会去【static-locations】定义的位置去找同文件名的资源
    # static-path-pattern: /static/**
    # 这里表示/xxx，如果没与匹配Controller时，就会去静态资源路径去找对应的文件
    static-path-pattern: /**



  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mydb
    username: root
    password: 12345678

    # 配置静态路径（默认为public/static路径）
  web:
    resources:
      # 静态资源管理路径，这些路径下放置静态资源，可以被搜索到，配置必须以/结尾
      static-locations: classpath:/public/, classpath:/static/, file:${upload.location}/
      chain:
        strategy:
          content:
            enabled: true # 开启静态资源策略管理
            paths: /** # 针对的静态资源路径


  redis:
    database: 0
    timeout: 15000
    port: 6379
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 1

  #配置security登录验证
  security:
    user:
      password: 123
      name: admin
    oauth2:
      client:
        registration:
          #          github:
          #            client-id: ${clientId}
          #            client-secret: ${clientSecret}
          #            redirect-uri: '{baseUrl}/login/oauth2/{registrationId}'
          #            client-authentication-method: POST
          #            scope: read:user
          #            client-name: GitHub
          gitee:
            provider: gitee
            client-id: 2694c10f42c9d33d9257e5693bcd5183506ee62e5b00396e13e8e5b80d882048
            client-secret: 6d046cc842f9e1924566d1c16e46350f4968354a98f339784ef6395bd6577f4d
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8081/getCode
            client-authentication-method: POST
            scope: user_info
            client-name: Gitee
        provider:
          gitee:
            authorization-uri: https://gitee.com/oauth/authorize
            token-uri: https://gitee.com/oauth/token
            user-name-attribute: id
            user-info-uri: https://gitee.com/api/v5/user
    #          github:
    #            authorization-uri: https://github.com/login/oauth/authorize
    #            token-uri: https://github.com/login/oauth/access_token
    #            user-name-attribute: id
    #            user-info-uri: https://api.github.com/user


# mybatis-plus的配置（和mybatis配置一致）
mybatis-plus:
  mapper-locations: classpath:mappers/*.xml
  type-aliases-package: com.zking.entity
  configuration:
    map-underscore-to-camel-case: true # 下横线转驼峰

# pagehelper分页配置
pagehelper:
  #  dialect:  # 数据库方言类型（得是类）
  helper-dialect: mysql # 方言
  reasonable: false # 负数默认转为第1页


#日志配置
#logging:
#  file:
#    path: .  #日志文件路径
#    name: mylog.log  #日志文件名
#  level:
#    root: error
#    web: error
#    com.zking: debug
#    org.mybatis: error





